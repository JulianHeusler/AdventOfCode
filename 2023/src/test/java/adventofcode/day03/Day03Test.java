package adventofcode.day03;

import adventofcode.util.AbstractDay;
import adventofcode.util.Parser;
import org.junit.jupiter.api.Test;

import java.util.stream.Stream;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

class Day03Test {
    private final AbstractDay day = new Day03();
    private static final int DAY_NUMBER = 3;

    @Test
    void testInputPart1() {
        String testInput = """
                467..114..
                ...*......
                ..35..633.
                ......#...
                617*......
                .....+.58.
                ..592.....
                ......755.
                ...$.*....
                .664.598..
                """;

        assertEquals(4361, day.solvePart1(testInput));
        assertEquals(4, day.solvePart1("""
                ........
                .24..4..
                ......*.
                """));
        assertEquals(221, day.solvePart1("""
                ....221
                ......*
                """));

        assertEquals(503, day.solvePart1("503+"));
    }

    @Test
    void name() {
        assertTrue(Stream.of('*', '#', '.', '$', '+', '-', '=', '/', '%', '&', '@').noneMatch(Character::isDigit));

        assertEquals(925, day.solvePart1("""
                12.......*..
                +.........34
                .......-12..
                ..78........
                ..*....60...
                78.........9
                .5.....23..$
                8...90*12...
                ............
                2.2......12.
                .*.........*
                1.1..503+.56
                """));
    }

    @Test
    void name2() {
        assertEquals(5 + 7 + 13 + 15, day.solvePart1("""
                .......5......
                ..7*..*.......
                ...*13*.......
                .......15.....
                """));
    }

    @Test
    void testRealInputPart1() {
        assertEquals(0, day.solvePart1(Parser.readInputFile(DAY_NUMBER)));
    }

    @Test
    void dwgzad() {
        assertEquals(4361, day.solvePart1("""
                467..114..
                ...*......
                ..35..633.
                ......#...
                617*......
                .....+.58.
                ..592.....
                ......755.
                ...$.*....
                .664.598..
                """));
    }

    @Test
    void lineWrap() {
        assertEquals(123, day.solvePart1("""
                .......123
                456....*..
                ..........
                """));
    }

    @Test
    void dwgzad31231() {
        assertEquals(413, day.solvePart1("""
                12.......*..
                +.........34
                .......-12..
                ..78........
                ..*....60...
                78..........
                .......23...
                ....90*12...
                ............
                2.2......12.
                .*.........*
                1.1.......56
                """));
    }

    @Test
    void dwdawd1231() {
        assertEquals(111 + 11 + 1, day.solvePart1("""
                ....#...#..#
                .111..11..1.
                ............
                """));
        assertEquals(111, day.solvePart1("""
                #...........
                .111..11..1.
                ............
                """));
    }

    @Test
    void dwgz223ad() {
        assertEquals(46561, day.solvePart1("""
                ........#641...........................832.72.........877.......=..793.........
                ....853.............&614.......#699......*.......*29..........900.....*718..%36
                .......*255..........................758.604...........985.....................
                ..9............276.393.76............$.............952......................947
                ..*..755...210...#..*..*................/............/.........774..=..........
                75..*...../........168..472.....662.....308..............996........685........
                .....173.........#..............*...........740.............*372...............
                ...............991.........*769..651.36.+12...*......861&............897.....74
                ....%..............518..624...........*.......475.........183*.......%.........
                ....25...688..346.....*.........720.29....162.................502..............
                86%.........-....*....359.........*......*........................881.........6
                ........&........280....................282..209...519.........................
                ..216..204.190........108*868...*408......../.......*..=............824........
                .............*................................$..449....159...731.....*...154..
                4...........307.817.........................314....................208.....*...
                ..........$.......@..#17..............284.........757......................921.
                .........817.................555.389....*............@.151.....................
                ...321..........303............*.....873.....%..899...................226*.....
                *...*......698...*.............363........189......*...192.&................890
                7..207.......*...284.......24+....................346.+....867.....808..43.....
                ........$................$............772...............+..........-...........
                ....855.250..........*....692.....968...............212..297...........223.....
                &..*.........108.....577....................133.87...=..............$...+......
                ....701.......*..476....................806../..*.........216.5+.834......174..
                8.........992.47...*............497.............428.....@.*..............*.....
                """));
    }


}